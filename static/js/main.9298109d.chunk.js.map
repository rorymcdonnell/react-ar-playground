{"version":3,"sources":["components/Camera.jsx","components/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Camera","geolocation","useGeolocation","className","latitude","longitude","geometry","primitive","width","scale","x","y","z","position","Home","to","App","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAuCeA,EAlCA,WACb,IAAMC,EAAcC,cACpB,OACE,gCACE,gCACE,qBAAIC,UAAU,WAAd,uBAAoCF,EAAYG,YAChD,qBAAID,UAAU,YAAd,wBAAsCF,EAAYI,gBAiBpD,cAAC,QAAD,UACE,cAAC,SAAD,CACEC,SAAU,CAAEC,UAAW,MAAOC,MAAO,GACrCC,MAAO,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACxBC,SAAU,CAAEH,EAAG,EAAGC,EAAG,EAAGC,GAAI,WCnBvBE,EAXF,WACX,OACE,gCACE,4DACA,cAAC,IAAD,CAAMC,GAAG,UAAT,SACE,iDCgBOC,MAjBf,WACE,OACE,cAAC,IAAD,CAAQC,SAAUC,uBAAlB,SACE,cAAC,IAAD,UACE,sBAAKf,UAAU,MAAf,UACE,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,cCHGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9298109d.chunk.js","sourcesContent":["import React from \"react\";\nimport useGeolocation from \"react-hook-geolocation\";\nimport { Entity, Scene } from \"aframe-react\";\nimport \"aframe\";\n\nconst Camera = () => {\n  const geolocation = useGeolocation();\n  return (\n    <div>\n      <div>\n        <h3 className=\"latitude\">LATITUDE: {geolocation.latitude}</h3>\n        <h3 className=\"longitude\">LONGITUDE: {geolocation.longitude}</h3>\n      </div>\n      {/* <a-scene\n        vr-mode-ui=\"enabled: false\"\n        embedded\n        arjs=\"sourceType: webcam; sourceWidth:1280; sourceHeight:960; displayWidth: 1280; displayHeight: 960; debugUIEnabled: false;\"\n      >\n        <a-text\n          value=\"This will always face the user.\"\n          look-at=\"[gps-camera]\"\n          scale=\"75 75 75\"\n          // gps-entity-place=\"latitude: 53.452136>; longitude: -2.264797;\"\n          gps-entity-place={`latitude: ${geolocation.latitude}; longitude: ${geolocation.longitude};`}\n        ></a-text>\n\n        <a-camera gps-camera rotation-reader></a-camera>\n      </a-scene> */}\n      <Scene>\n        <Entity\n          geometry={{ primitive: \"box\", width: 5 }}\n          scale={{ x: 2, y: 2, z: 2 }}\n          position={{ x: 0, y: 0, z: -5 }}\n        />\n      </Scene>\n    </div>\n  );\n};\n\nexport default Camera;\n","import { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Click to go to camera page</h1>\n      <Link to=\"/camera\">\n        <button>CLICK</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import ComponentWithGeolocation from \"./components/ComponentWithGeolocation\";\nimport Camera from \"./components/Camera\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <div className=\"App\">\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/camera\">\n            <Camera />\n          </Route>\n        </div>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}